name: Tests and Update README

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  test-coverage-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET (6/7/8/9)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
            9.0.x

      - name: Restore
        run: dotnet restore SGuard.DataAnnotations.sln

      - name: Build (Release)
        run: dotnet build SGuard.DataAnnotations.sln --configuration Release --no-restore

      - name: Test with coverage (Coverlet)
        run: |
          dotnet test SGuard.DataAnnotations.sln \
            --configuration Release \
            --no-build \
            --settings coverlet.runsettings \
            --collect:"XPlat Code Coverage" \
            --logger "trx;LogFileName=test_results.trx"

      - name: Install ReportGenerator tool
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          echo "$HOME/.dotnet/tools" >> "$GITHUB_PATH"

      - name: Generate coverage summary and badges
        run: |
          reportgenerator \
            -reports:"**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"MarkdownSummary;Badges"
          echo "Coverage summary generated: coverage-report/Summary.md"
          echo "Badges generated: coverage-report/badge_linecoverage.svg, coverage-report/badge_branchcoverage.svg"

      - name: Build test summary (from TRX)
        shell: pwsh
        run: |
          $trx = Get-ChildItem -Recurse -Filter test_results.trx | Select-Object -First 1
          if ($null -eq $trx) {
            @(
              '### Test Results'
              ''
              '_TRX file not found._'
            ) | Out-File -FilePath test-summary.md -Encoding utf8
            exit 0
          }
          [xml]$doc = Get-Content $trx.FullName
          $c = $doc.TestRun.ResultSummary.Counters
          $total = [int]$c.total
          $passed = [int]$c.passed
          $failed = [int]$c.failed
          $skipped = [int]$c.notExecuted
          @(
            '### Test Results'
            ''
            '| Total | Passed | Failed | Skipped |'
            '|------:|-------:|-------:|--------:|'
            "| $total | $passed | $failed | $skipped |"
          ) | Out-File -FilePath test-summary.md -Encoding utf8

      - name: Update README with test results and coverage
        shell: bash
        run: |
          set -euo pipefail
          SUMMARY_FILE="coverage-report/Summary.md"
          TEST_FILE="test-summary.md"
          README="README.md"
          if [ ! -f "$README" ]; then
            echo "README.md not found at repository root."
            exit 1
          fi

          block_start="<!-- TEST-RESULTS:START -->"
          block_end="<!-- TEST-RESULTS:END -->"

          {
            echo "## Test and Coverage Status"
            echo
            if [ -f "$TEST_FILE" ]; then
              cat "$TEST_FILE"
              echo
            fi
            if [ -f "$SUMMARY_FILE" ]; then
              echo "### Code Coverage"
              cat "$SUMMARY_FILE"
            else
              echo "_Coverage summary not found._"
            fi
          } > .insert-block.md

          if grep -q "$block_start" "$README"; then
            # Replace existing block content between markers
            awk -v start="$block_start" -v end="$block_end" '
              BEGIN { printing=1 }
              {
                if ($0 ~ start) {
                  print $0
                  while ((getline line < ".insert-block.md") > 0) print line
                  printing=0
                  next
                }
                if ($0 ~ end) {
                  printing=1
                }
                if (printing) print $0
              }
            ' "$README" > "${README}.tmp"
            mv "${README}.tmp" "$README"
          else
            # Append a new block at the end
            {
              echo
              echo "$block_start"
              cat .insert-block.md
              echo
              echo "$block_end"
            } >> "$README"
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "docs(readme): update test results and coverage [skip ci]"
          branch: "auto/update-readme"
          title: "Update README with test results and coverage"
          body: "This PR updates the README and coverage badges with the latest test results."
          base: main